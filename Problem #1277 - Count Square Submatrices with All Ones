'''class Solution:
    def countSquares(self, matrix: List[List[int]]) -> int:
        def searchsquare(matrix,length,colen,rolen):
            ans=0
            def checkone(matrix,length,starti,startj):
                for i in range(starti,starti+length):
                    for j in range(startj,startj+length):
                        if matrix[i][j]==0: return 0
                return 1
            for i in range(colen-length+1):
                for j in range(rolen-length+1):
                    ans+=checkone(matrix,length,i,j)
            return ans

        a=len(matrix)
        b=len(matrix[0])
        maxl=min(a,b)
        ans=0
        for i in range(1,maxl+1):
            tmp=searchsquare(matrix,i,a,b)
            if tmp==0: break
            ans+=tmp

        return ans'''
class Solution:
    def countSquares(self, matrix: List[List[int]]) -> int:
        a=len(matrix)
        b=len(matrix[0])
        maxlen=min(a,b)
        cnt=[[0] * (b+1) for _ in range(a+1)]
        for i in range(a):
            for j in range(b):
                cnt[i+1][j+1]=cnt[i][j+1]+cnt[i+1][j]-cnt[i][j]
                if matrix[i][j]==0:cnt[i+1][j+1]+=1
        ans=a*b-cnt[a][b]
        for l in range(1,maxlen):
            tmp=0
            for i in range(1,a+1-l):
                for j in range(1,b+1-l):
                    if cnt[i+l][j+l]-cnt[i+l][j-1]-cnt[i-1][j+l]+cnt[i-1][j-1]==0: tmp+=1
            if tmp==0:break
            ans+=tmp
        return ans
        
