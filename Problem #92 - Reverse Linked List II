# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
    def reverseBetween(self, head: Optional[ListNode], left: int, right: int) -> Optional[ListNode]:
        rvshead=head
        while(left>1):
            rvshead=rvshead.next
            left-=1
            right-=1
        rvsnode=rvshead
        stack=[]
        for i  in range(right):
            stack.append(rvsnode.val)
            rvsnode=rvsnode.next
        while stack!=[]:
            cur=stack.pop()
            rvshead.val=cur
            rvshead=rvshead.next
        return head
